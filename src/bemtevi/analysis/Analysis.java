/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.analysis;

import bemtevi.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAInicio(AInicio node);
    void caseATernarioExp(ATernarioExp node);
    void caseAOuExp(AOuExp node);
    void caseAEExp(AEExp node);
    void caseAComparacaoExp(AComparacaoExp node);
    void caseAMenorQueExp(AMenorQueExp node);
    void caseAMenorIgualExp(AMenorIgualExp node);
    void caseASomaExp(ASomaExp node);
    void caseASubtracaoExp(ASubtracaoExp node);
    void caseAMultiplicacaoExp(AMultiplicacaoExp node);
    void caseADivisaoExp(ADivisaoExp node);
    void caseAModuloExp(AModuloExp node);
    void caseANegacaoExp(ANegacaoExp node);
    void caseANegativoExp(ANegativoExp node);
    void caseAChamadaExp(AChamadaExp node);
    void caseAInstanciaExp(AInstanciaExp node);
    void caseABlocoExp(ABlocoExp node);
    void caseANumeroExp(ANumeroExp node);
    void caseAIdExp(AIdExp node);
    void caseAStringExp(AStringExp node);
    void caseATextoExp(ATextoExp node);
    void caseAVerdadeExp(AVerdadeExp node);
    void caseAFalsoExp(AFalsoExp node);
    void caseAFamiliaFamilia(AFamiliaFamilia node);
    void caseAVazioFamilia(AVazioFamilia node);
    void caseARelacao(ARelacao node);
    void caseAConstanteBllocoFecho(AConstanteBllocoFecho node);
    void caseAObjetoBllocoFecho(AObjetoBllocoFecho node);
    void caseADefinicaoBllocoFecho(ADefinicaoBllocoFecho node);
    void caseAExpListaExp(AExpListaExp node);
    void caseAVazioListaExp(AVazioListaExp node);
    void caseAInitListaInit(AInitListaInit node);
    void caseAVazioListaInit(AVazioListaInit node);
    void caseALInitFecho(ALInitFecho node);
    void caseAInitObjeto(AInitObjeto node);
    void caseALExpFecho(ALExpFecho node);
    void caseAIdIdOuAttr(AIdIdOuAttr node);
    void caseAAttrIdOuAttr(AAttrIdOuAttr node);
    void caseAIdFecho(AIdFecho node);
    void caseAPrimitivoTipo(APrimitivoTipo node);
    void caseAMoldeTipo(AMoldeTipo node);
    void caseATipoPrimitivo(ATipoPrimitivo node);
    void caseATipoMolde(ATipoMolde node);
    void caseAFunc1DecFuncao(AFunc1DecFuncao node);
    void caseAFunc2DecFuncao(AFunc2DecFuncao node);
    void caseAParametroParametros(AParametroParametros node);
    void caseAVazioParametros(AVazioParametros node);
    void caseAIdParametro(AIdParametro node);
    void caseAAssinaturaParametro(AAssinaturaParametro node);
    void caseAAssinatura(AAssinatura node);
    void caseAParametrosAssinatura(AParametrosAssinatura node);
    void caseAVazioParametrosAssinatura(AVazioParametrosAssinatura node);
    void caseATipoParametroAssinatura(ATipoParametroAssinatura node);
    void caseAAssinaturaParametroAssinatura(AAssinaturaParametroAssinatura node);
    void caseAAtributos(AAtributos node);
    void caseAMetodos(AMetodos node);
    void caseADefMolde(ADefMolde node);
    void caseAPrograma(APrograma node);

    void caseTPrimitivo(TPrimitivo node);
    void caseTNumero(TNumero node);
    void caseTVerdade(TVerdade node);
    void caseTFalso(TFalso node);
    void caseTMolde(TMolde node);
    void caseTSe(TSe node);
    void caseTEntao(TEntao node);
    void caseTSenao(TSenao node);
    void caseTPassa(TPassa node);
    void caseTPor(TPor node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTContem(TContem node);
    void caseTConstante(TConstante node);
    void caseTFuncao(TFuncao node);
    void caseTObjeto(TObjeto node);
    void caseTFim(TFim node);
    void caseTSeparador(TSeparador node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTPontoFinal(TPontoFinal node);
    void caseTAbreParenteses(TAbreParenteses node);
    void caseTFechaParenteses(TFechaParenteses node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTAbreAspas(TAbreAspas node);
    void caseTMultiplicacao(TMultiplicacao node);
    void caseTSoma(TSoma node);
    void caseTSubtracao(TSubtracao node);
    void caseTDivisao(TDivisao node);
    void caseTModulo(TModulo node);
    void caseTIgualIgual(TIgualIgual node);
    void caseTIgual(TIgual node);
    void caseTMenorQue(TMenorQue node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTExclamacao(TExclamacao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTEntrada(TEntrada node);
    void caseTVazio(TVazio node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTIdMolde(TIdMolde node);
    void caseTId(TId node);
    void caseTTexto(TTexto node);
    void caseTComentarioBloco(TComentarioBloco node);
    void caseTString(TString node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
