/* This file was generated by SableCC (http://www.sablecc.org/). */

package bemtevi.node;

import java.util.*;
import bemtevi.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private PFamilia _familia_;
    private PDefMolde _esquerda_;
    private final LinkedList<PDefMolde> _direita_ = new LinkedList<PDefMolde>();

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") PFamilia _familia_,
        @SuppressWarnings("hiding") PDefMolde _esquerda_,
        @SuppressWarnings("hiding") List<?> _direita_)
    {
        // Constructor
        setFamilia(_familia_);

        setEsquerda(_esquerda_);

        setDireita(_direita_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneNode(this._familia_),
            cloneNode(this._esquerda_),
            cloneList(this._direita_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public PFamilia getFamilia()
    {
        return this._familia_;
    }

    public void setFamilia(PFamilia node)
    {
        if(this._familia_ != null)
        {
            this._familia_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._familia_ = node;
    }

    public PDefMolde getEsquerda()
    {
        return this._esquerda_;
    }

    public void setEsquerda(PDefMolde node)
    {
        if(this._esquerda_ != null)
        {
            this._esquerda_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._esquerda_ = node;
    }

    public LinkedList<PDefMolde> getDireita()
    {
        return this._direita_;
    }

    public void setDireita(List<?> list)
    {
        for(PDefMolde e : this._direita_)
        {
            e.parent(null);
        }
        this._direita_.clear();

        for(Object obj_e : list)
        {
            PDefMolde e = (PDefMolde) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._direita_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._familia_)
            + toString(this._esquerda_)
            + toString(this._direita_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._familia_ == child)
        {
            this._familia_ = null;
            return;
        }

        if(this._esquerda_ == child)
        {
            this._esquerda_ = null;
            return;
        }

        if(this._direita_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._familia_ == oldChild)
        {
            setFamilia((PFamilia) newChild);
            return;
        }

        if(this._esquerda_ == oldChild)
        {
            setEsquerda((PDefMolde) newChild);
            return;
        }

        for(ListIterator<PDefMolde> i = this._direita_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDefMolde) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
